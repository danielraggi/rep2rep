import arith
import event
import shade

typeSystem areaDiagram =
  imports arith, eventT, shade
  types _:tag, _:area, _:rect, _:point, empty, _:coloured
  order empty < area, event < tag

conSpec areaDiagramG:areaDiagram =
  imports arithG, event
  constructors
    reverseTag: [tag] -> tag,
    cPoint:[numExp, numExp] -> point,
    cRect: [point, point] -> rect,
    overlayRect: [area, rect, tag, shading] -> area,
    colour: [coloured, tag, shading] -> coloured,
    addColour: [area, coloured] -> area,
    combine: [area, area] -> area

registration areaDiagramG =
    reverseTag : emergent,
    cPoint : iconic,
    cRect : iconic,
    overlayRect : spatial-index,
    colour : iconic,
    addColour : emergent,
    combine : spatial-index
