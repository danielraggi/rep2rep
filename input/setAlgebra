import basicLogic

typeSystem setAlgebra =
    imports {basicLogic}
    types {_:var, _:formula, _:bset, _:set, \emptyset, \in, \cup, \cap, \subseteq,
          \powerset, =, binaryOp, binaryRel, unaryOp,
          oB, cB, \comma}
    order {var < set,
          bset < set,
          \emptyset < set,
          \in < binaryRel,
          = < binaryRel,
          \subseteq < binaryRel,
          \cup < binaryOp,
          \cap < binaryOp,
          \powerset < unaryOp}

conSpec setAlgebraG:setAlgebra =
  imports basicLogicG
  constructors {
    infixRel : [set,binaryRel,set] -> formula,
    infixOp : [set,binaryOp,set] -> set,
    unaryOpApp : [unaryOp,set] -> set,
    singleton : [oB,set,cB] -> bset,
    insert : [set,\comma,bset] -> bset
  }