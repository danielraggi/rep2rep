import bTreeBayes
import transferSchemas/bayesArea
import transferSchemas/bayesTable
import transferSchemas/bayesTree

graph tt:bayesG = t_{0}:Pr(disease) = 0.04; Pr(test | disease) = 0.95; Pr(-test | -disease) = 0.9:probSys <- addEqn[t_{00}:Pr(disease)=0.04:probEqn <- makeEqn[t_{000}:disease:event, t_{001}:0.04:real10], t_{01}:Pr(test | disease)=0.95;Pr(-test | -disease)=0.9:probSys <- addEqn[t_{010}:Pr(test | disease)=0.95:probEqn <- makeEqn[t_{0100}:test | disease:condEvent <- makeCond[t_{01000}:test:event, t_{01001}:disease:event], t_{0101}:0.95:real10], t_{011}:Pr(-test | -disease)=0.9:probEqn <- makeEqn[t_{0110}:-test | -disease:condEvent <- makeCond[t_{01100}:-test:event <- complement[t_{011000}:test:event], t_{01101}:-disease:event <- complement[t_{011010}:disease:event]], t_{0111}:0.9:real10]]]

transfer
    sourceGraph tt
    targetConSpec areaDiagramG
    interConSpec interBayesArea
    goal :metaTrue <- encode[t_{0}:Pr(disease) = 0.04; Pr(test | disease) = 0.95; Pr(-test | -disease) = 0.9:probSys,t':area]
    eager
    output bayesAreaTest
    save bayesAreaTest
    limit 2

graph prEquation:stringRich = liftString Pr(ab U c | d) = 0.21
graph prSystem:stringRich = liftString Pr(ab U -c | d) = 0.21; Pr(d) = 0.6
graph prSystem1:stringRich = liftString Pr(-a | b) = 0.63; Pr(b) = 0.5; Pr(b | a) = 1

transfer
    sourceGraph prSystem1
    targetConSpec btree
    interConSpec interStringBTree
    goal :metaTrue <- TREEIFY[t:Pr(-a | b) = 0.63; Pr(b) = 0.5; Pr(b | a) = 1:string,t':btree]
    eager
    output test1
    save test1
    limit 2
    goalLimit 3

transfer
    sourceGraph test1
    targetConSpec btree
    interConSpec interBTreeBTreeSIMPLIFY
    goal :metaTrue <- SIMPLIFY[v_{1}:btree,t':btree]
    eager
    output test2
    save test2
    limit 1
    goalLimit 4

transfer
    sourceGraph test2
    targetConSpec btree
    interConSpec interBTreeBTreeSEMICOLON
    goal :metaTrue <- SEMICOLON[v_{69}:btree,t':btree]
    eager
    output test3
    save test3
    limit 1
    goalLimit 4

transfer
    sourceGraph test3
    targetConSpec btree
    interConSpec interBTreeBTreeSIMPLIFY
    goal :metaTrue <- SIMPLIFY[v_{0}:btree,t':btree]
    eager
    output test4
    save test4
    limit 1
    goalLimit 4

transfer
    sourceGraph test4
    targetConSpec btree
    interConSpec interBTreeBTreeSPACE
    goal :metaTrue <- SPACE[v_{67}:btree,t':btree]
    eager
    output test5
    save test5
    limit 1
    goalLimit 4

transfer
    sourceGraph test5
    targetConSpec btree
    interConSpec interBTreeBTreeSIMPLIFY
    goal :metaTrue <- SIMPLIFY[v_{1}:btree,t':btree]
    eager
    output test6
    save test6
    limit 1
    goalLimit 4

transfer
    sourceGraph test6
    targetConSpec btree
    interConSpec interBTreeBTreeMID
    goal :metaTrue <- MID[v_{63}:btree,t':btree]
    eager
    output test7
    save test7
    limit 10
    goalLimit 4

transfer
    sourceGraph test7
    targetConSpec btree
    interConSpec interBTreeBTreeSIMPLIFY
    goal :metaTrue <- SIMPLIFY[v_{1}:btree,t':btree]
    eager
    output test8
    save test8
    limit 10
    goalLimit 4

transfer
    sourceGraph test8
    targetConSpec bayesG
    interConSpec interBTreeBayes
    goal :metaTrue <- SYS[v_{57}:btree,t':probSys]
    eager
    output test9
    save test9
    limit 10
    goalLimit 4

transfer
    sourceGraph test9
    targetConSpec areaDiagramG
    interConSpec interBayesArea
    goal :metaTrue <- encode[v_{0}:probSys,t':area]
    eager
    output test10area
    save test10area
    limit 10
    goalLimit 5

transfer
    sourceGraph test9
    targetConSpec contTableG
    interConSpec interBayesTable
    goal :metaTrue <- encode[v_{0}:probSys,t':table]
    eager
    output test10table
    save test10table
    limit 10
    goalLimit 5

transfer
    sourceGraph test9
    targetConSpec probTreeG
    interConSpec interBayesTree
    goal :metaTrue <- encode[v_{0}:probSys,t':tree]
    eager
    output test10tree
    save test10tree
    limit 10
    goalLimit 5
