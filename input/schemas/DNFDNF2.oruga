import DNF

tSchema disjE':(propDNFG,propDNFG) =
    source t':dnf
    target t:dnf <- disj[t1:clause,t2:dnf]
    antecedent ([t':dnf],[t1:clause]) :: isEntailedBy, ([t':dnf],[t2:dnf]) :: isEntailedBy
    consequent ([t':dnf],[t:dnf]) :: isEntailedBy
    strength 1.0

tSchema conjE1':(propDNFG,propDNFG) =
    source t':dnf
    target t:clause <- conj[t1:literal,t2:clause]
    antecedent ([t':dnf],[t1:literal]) :: isEntailedBy
    consequent ([t':dnf],[t:clause]) :: isEntailedBy
    strength 1.0

tSchema conjE2':(propDNFG,propDNFG) =
    source t':dnf
    target t:clause <- conj[t1:literal,t2:clause]
    antecedent ([t':dnf],[t2:clause]) :: isEntailedBy
    consequent ([t':dnf],[t:clause]) :: isEntailedBy
    strength 1.0

tSchema disjI1':(propDNFG,propDNFG) =
    source t':dnf <- disj[t1':clause,t2':dnf]
    target t:dnf
    antecedent ([t1':clause],[t:dnf]) :: isEntailedBy
    consequent ([t':dnf],[t:dnf]) :: isEntailedBy
    strength 1.0

tSchema disjI2':(propDNFG,propDNFG) =
    source t':dnf <- disj[t1':clause,t2':dnf]
    target t:dnf
    antecedent ([t2':dnf],[t:dnf]) :: isEntailedBy
    consequent ([t':dnf],[t:dnf]) :: isEntailedBy
    strength 1.0

tSchema neg':(propDNFG,propDNFG) =
    source t':literal <- neg[t1':var]
    target t:literal <- neg[t1:var]
    antecedent ([t1':var],[t1:var]) :: entails
    consequent ([t':literal],[t:literal]) :: isEntailedBy
    strength 1.0

tSchema basicA1':(propDNFG,propDNFG) =
    source t':A:var
    target t:A:var
    antecedent
    consequent ([t':A:var],[t:A:var]) :: isEntailedBy
    strength 1.0

tSchema basicA2':(propDNFG,propDNFG) =
    source t':A:var
    target t:A:var
    antecedent
    consequent ([t':A:var],[t:A:var]) :: entails
    strength 1.0

tSchema basicB1':(propDNFG,propDNFG) =
    source t':B:var
    target t:B:var
    antecedent
    consequent ([t':B:var],[t:B:var]) :: isEntailedBy
    strength 1.0

tSchema basicB2':(propDNFG,propDNFG) =
    source t':B:var
    target t:B:var
    antecedent
    consequent ([t':B:var],[t:B:var]) :: entails
    strength 1.0

comment {basicC1':(propDNFG,propDNFG) =
    source t':C:var
    target t:C:var
    antecedent
    consequent ([t':C:var],[t:C:var]) :: isEntailedBy
    strength 1.0}

comment {basicC2':(propDNFG,propDNFG) =
    source t':C:var
    target t:C:var
    antecedent
    consequent ([t':C:var],[t:C:var]) :: entails
    strength 1.0}
