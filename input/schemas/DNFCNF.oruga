import DNF
import CNF
import metaLogic

typeSystem interDNFCNF =
    imports propDNF, propCNF, metaLogicT
    types prop
    order dnf < prop, cnf < prop

conSpec interDNFCNFG:interDNFCNF =
    imports metaLogic
    constructors
        entails : [prop,prop] -> metaBool

tSchema basicA:(propDNFG,propCNFG,interDNFCNFG) =
    source t:A:var
    target t':A:var
    antecedent
    consequent :metaTrue <- entails[t:A:var,t':A:var]
    strength 2

tSchema basicB:(propDNFG,propCNFG,interDNFCNFG) =
    source t:B:var
    target t':B:var
    antecedent
    consequent :metaTrue <- entails[t:B:var,t':B:var]
    strength 2

tSchema basicC:(propDNFG,propCNFG,interDNFCNFG) =
    source t:C:var
    target t':C:var
    antecedent
    consequent :metaTrue <- entails[t:C:var,t':C:var]
    strength 2

tSchema basicA1:(propDNFG,propCNFG,interDNFCNFG) =
    source t:-A:nonvar
    target t':-A:nonvar
    antecedent
    consequent :metaTrue <- entails[t:-A:nonvar,t':-A:nonvar]
    strength 2

tSchema basicB2:(propDNFG,propCNFG,interDNFCNFG) =
    source t:-B:nonvar
    target t':-B:nonvar
    antecedent
    consequent :metaTrue <- entails[t:-B:nonvar,t':-B:nonvar]
    strength 2

tSchema basicC3:(propDNFG,propCNFG,interDNFCNFG) =
    source t:-C:nonvar
    target t':-C:nonvar
    antecedent
    consequent :metaTrue <- entails[t:-C:nonvar,t':-C:nonvar]
    strength 2

comment basicD:(propDNFG,propCNFG,interDNFCNFG) =
    source t:D:var
    target t':D:var
    antecedent
    consequent :metaTrue <- entails[t:D:var,t':D:var]
    strength 2

comment neg:(propDNFG,propCNFG,interDNFCNFG) =
    source t:nonvar <- neg[t1:var]
    target t':nonvar <- neg[t1':var]
    antecedent :metaTrue <- entails[t1':var,t1:var]
    consequent :metaTrue <- entails[t:nonvar,t':nonvar]
    strength 2

tSchema disjE:(propDNFG,propCNFG,interDNFCNFG) =
    source t:nonclauseDNF <- disj[t1:clauseDNF,t2:dnf]
    target t':cnf
    antecedent :metaTrue <- entails[t1:clauseDNF,t':cnf],
               :metaTrue <- entails[t2:dnf,t':cnf]
    consequent :metaTrue <- entails[t:nonclauseDNF,t':cnf]
    strength 2

tSchema disjI1:(propDNFG,propCNFG,interDNFCNFG) =
    source t:dnf
    target t':nonliteralCNF <- disj[t1':literal,t2':clauseCNF]
    antecedent :metaTrue <- entails[t:dnf,t1':literal]
    consequent :metaTrue <- entails[t:dnf,t':nonliteralCNF]
    strength 1

tSchema disjI2:(propDNFG,propCNFG,interDNFCNFG) =
    source t:dnf
    target t':nonliteralCNF <- disj[t1':literal,t2':clauseCNF]
    antecedent :metaTrue <- entails[t:dnf,t2':clauseCNF]
    consequent :metaTrue <- entails[t:dnf,t':nonliteralCNF]
    strength 1

tSchema conjE1:(propDNFG,propCNFG,interDNFCNFG) =
    source t:nonliteralDNF <- conj[t1:literal,t2:clauseDNF]
    target t':cnf
    antecedent :metaTrue <- entails[t1:literal,t':cnf]
    consequent :metaTrue <- entails[t:nonliteralDNF,t':cnf]
    strength 2

tSchema conjE2:(propDNFG,propCNFG,interDNFCNFG) =
    source t:nonliteralDNF <- conj[t1:literal,t2:clauseDNF]
    target t':cnf
    antecedent :metaTrue <- entails[t2:clauseDNF,t':cnf]
    consequent :metaTrue <- entails[t:nonliteralDNF,t':cnf]
    strength 2

comment conjI:(propDNFG,propCNFG,interDNFCNFG) =
    source t:nonliteral
    target t':nonclause <- conj[t1':clauseCNF,t2':cnf]
    antecedent :metaTrue <- entails[t:nonliteral,t1':clauseCNF], :metaTrue <- entails[t:nonliteral,t2':cnf]
    consequent :metaTrue <- entails[t:nonliteral,t':nonclause]
    strength 0.1
