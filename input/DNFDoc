import schemas/DNFCNF

graph AinB:propDNFG = {
    t:AB|-AB|-A-B:nonclauseDNF
        <- disj[t1:AB:nonliteralDNF <- conj[t11:A:var,
                                     t12:B:var],
                t2:-AB|-A-B:nonclauseDNF
                     <- disj[t21:-AB:nonliteralDNF <- conj[t211:-A:nonvar <- neg[t2111:A:var],
                                                    t212:B:var],
                             t22:-A-B:nonliteralDNF <- conj[t221:-A:nonvar <- neg[t2211:A:var],
                                                     t222:-B:nonvar <- neg[t2221:B:var]]]]
}

graph AinBdisjC:propDNFG = {
    t:AB-C|-AB-C|-A-BC|-A-B-C:nonclauseDNF
        <- disj[t1:AB-C:nonliteralDNF <- conj[t11:A:var,
                                            t12:B-C:nonliteralDNF <- conj[t121:B:var,
                                                                        t122:-C:nonvar <- neg[t1221:C:var]]],
                t2:-AB-C|-A-BC|-A-B-C:nonclauseDNF
                     <- disj[t21:-AB-C:nonliteralDNF <- conj[t211:-A:nonvar <- neg[t2111:A:var],
                                                          t212:B-C:nonliteralDNF <- conj[t2121:B:var,
                                                                                      t2122:-C:nonvar<- neg[t21221:C:var]]],
                             t22:-A-BC|-A-B-C:nonclauseDNF
                                  <- disj[t221:-A-BC:nonliteralDNF <- conj[t2211:-A:nonvar <- neg[t22111:A:var],
                                                                        t2212:-BC:nonliteralDNF <- conj[t22121:-B:nonvar <- neg[t221211:B:var],
                                                                                                     t22122:C:var]],
                                          t222:-A-B-C:nonliteralDNF <- conj[t2221:-A:nonvar <- neg[t22211:A:var],
                                                                         t2222:-B-C:nonliteralDNF <- conj[t22221:-B:nonvar <- neg[t222211:B:var],
                                                                                                       t22222:-C:nonvar <- neg[t222221:C:var]]] ]]]
}


graph AinBdisjCinD:propDNFG = {
  t:AB-CD|-AB-CD|-A-BCD|-A-B-CD|-A-B-C-D:nonclauseDNF
      <- disj[t1:AB-CD:nonliteralDNF
                <- conj[t11:A:var,
                        t12:B-CD:nonliteralDNF
                            <- conj[t121:B:var,
                                    t122:-CD:nonliteralDNF
                                        <- conj[t1221:-C:nonvar <- neg[t12211:C:var],
                                                t1222:D:var]]],
              t2:-AB-CD|-A-BCD|-A-B-CD|-A-B-C-D:nonclauseDNF
                   <- disj[t21:-AB-CD:nonliteralDNF
                                <- conj[t211:-A:nonvar <- neg[t2111:A:var],
                                        t212:B-CD:nonliteralDNF
                                            <- conj[t2121:B:var,
                                                    t2122:-CD:nonliteralDNF
                                                        <- conj[t21221:-C:nonvar <- neg[t212211:C:var],
                                                                t21222:D:var]]],
                           t22:-A-BCD|-A-B-CD|-A-B-C-D:nonclauseDNF
                               <- disj[t221:-A-BCD:nonliteralDNF
                                           <- conj[t2211:-A:nonvar <- neg[t22111:A:var],
                                                   t2212:-BCD:nonliteralDNF
                                                       <- conj[t22121:-B:nonvar <- neg[t221211:B:var],
                                                               t22122:CD:nonliteralDNF
                                                                   <- conj[t221221:C:var,
                                                                           t221222:D:var]]],
                                       t222:-A-B-CD|-A-B-C-D:nonclauseDNF
                                           <- disj[t2221:-A-B-CD:nonliteralDNF
                                                       <- conj[t22211:-A:nonvar <- neg[t222111:A:var],
                                                               t22212:-B-CD:nonliteralDNF
                                                                   <- conj[t222121:-B:nonvar <- neg[t2221211:B:var],
                                                                           t222122:-CD:nonliteralDNF
                                                                               <- conj[t2221221:-C:nonvar <- neg[t22212211:C:var],
                                                                                       t2221222:D:var] ]],
                                                   t2222:-A-B-C-D:nonliteralDNF
                                                       <- conj[t22221:-A:nonvar <- neg[t222211:A:var],
                                                               t22222:-B-C-D:nonliteralDNF
                                                                   <- conj[t222221:-B:nonvar <- neg[t2222211:B:var],
                                                                           t222222:-C-D:nonliteralDNF
                                                                               <- conj[t2222221:-C:nonvar <- neg[t22222211:C:var],
                                                                                       t2222222:-D:nonvar <- neg[t22222221:D:var]]]]
                                                   ]
                                        ]
                            ]
                ]
}

graph -A-B|-A-C|B-C:propDNFG = {
  t:-A-B|-A-C|B-C:nonclauseDNF
    <- disj[t1:-A-B:nonliteralDNF <- conj[t11:-A:nonvar <- neg[t111:A:var],t12:-B:nonvar <- neg[t121:B:var]],
            t2:-A-C|B-C:nonclauseDNF
                <- disj[t21:-A-C:nonliteralDNF <- conj[t211:-A:nonvar <- neg[t2111:A:var],t212:-C:nonvar <- neg[t2121:C:var]],
                        t22:B-C:nonliteralDNF <- conj[t221:B:var,t222:-C:nonvar <- neg[t2221:C:var]]]]
}

comment
   sourceGraph -A-B|-A-C|B-C
   targetConSpec propCNFG
   interConSpec interDNFCNFG
   goalGraph {:metaTrue <- entails[t:-A-B|-A-C|B-C:nonclauseDNF,t':nonliteralCNF]}
   unistructured
   output AinBdisjCTest
   outputLimit 50

comment
   sourceGraph AinB
   targetConSpec propCNFG
   interConSpec interDNFCNFG
   goalGraph {:metaTrue <- entails[t:AB|-AB|-A-B:nonclauseDNF,t':nonliteralCNF]}
   unistructured
   output AinB
   outputLimit 50

transfer
    sourceGraph -A-B|-A-C|B-C
    targetConSpec propCNFG
    interConSpec interDNFCNFG
    goalGraph {:metaTrue <- entails[t:-A-B|-A-C|B-C:nonclauseDNF,t':nonliteralCNF]}
    output AinBdisjC
    unistructured
    outputLimit 50
    matchTarget t:nonliteralCNF <- disj[t1:nonvar, t2:nonvar]

comment
    sourceGraph AinBdisjCinD
    targetTypeSystem propCNF
    goalGraph {:metaTrue <- entails[t:AB-CD|-AB-CD|-A-BCD|-A-B-CD|-A-B-C-D:nonclauseDNF,t':nonliteralCNF]}
    matchTarget t:nonliteralDNF <- disj[t1:B:var, t2:nonvar <- neg[t21:A:var]]
    targetConSpec propCNFG
    outputLimit 10
    output AinBdisjCinD
